plugins {
	id 'org.asciidoctor.convert' version '1.5.3'
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'org.jetbrains.kotlin.jvm' version '1.3.50'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.3.50'
	id 'com.adarshr.test-logger' version '1.2.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.boclips'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

ext {
	set('snippetsDir', file('build/generated-snippets'))
    junitVersion = '5.3.1'
    kotlinVersion = '1.3.50'
}

test {
	useJUnitPlatform()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("org.springframework.boot:spring-boot-starter-actuator")

	implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
	implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"

	implementation 'com.github.kittinunf.fuel:fuel:2.0.1'
	implementation 'com.github.kittinunf.fuel:fuel-jackson:2.0.1'
	implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.0.1'

	implementation 'org.imsglobal:basiclti-util:1.1.2'
	
	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

	testImplementation 'com.github.boclips:videos:v0.593.0'
	// Below are transitive client dependencies that we need to import ourselves at the moment...
	testImplementation 'org.springframework.security.oauth:spring-security-oauth2:2.1.4.RELEASE'
	testImplementation 'com.damnhandy:handy-uri-templates:2.1.8'

	testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}
